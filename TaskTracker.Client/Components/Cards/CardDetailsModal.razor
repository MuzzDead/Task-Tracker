@using AntDesign
@using TaskTracker.Client.Components.Comment
@using TaskTracker.Client.DTOs.Member

<div class="card-modal-backdrop @(IsVisible ? "visible" : "")"
     @onclick=@HandleBackdropClick>
    <div class="card-modal-container" @onclick:stopPropagation="true">
        <Card Class="card-details-modal" Bordered="false">
            <div class="modal-header">
                <div class="task-status-toggle" style="margin-right: 1rem;">
                    <Tooltip Title="@(IsTaskCompleted ? "Mark as incomplete" : "Mark as completed")" Placement=@Placement.Bottom>
                        <Checkbox @bind-Checked=@IsTaskCompleted @onclick=@HandleComplete Class="round-checkbox" />
                    </Tooltip>
                </div>

                <EditableCardTitle Title=@(Card?.Title ?? "")
                                   IsEditing=@IsTitleEditing
                                   IsSaving=@IsTitleSaving
                                   OnTitleEditingChanged=@OnTitleEditingChanged
                                   OnTitleSave=@OnTitleSave />

                <Button Type=@ButtonType.Text
                        Icon="delete"
                        Size=@ButtonSize.Large
                        @onclick=@HandleDelete
                        Loading=@IsDeleting
                        Class="delete-button me-2" />

                <Dropdown Trigger="@(new Trigger[] { Trigger.Click })">
                    <Overlay>
                        <Menu>
                            <MenuItem Key="edit-state" OnClick=@HandleOpenStateEditModal>
                                <Icon Type="edit" />
                                <span style="margin-left: 8px;">Edit state</span>
                            </MenuItem>
   <MenuItem Key="move" OnClick=@HandleMove>
    <Icon Type="swap" />
    Move
</MenuItem>
                        </Menu>
                    </Overlay>
                    <ChildContent>
                        <Button Type=@ButtonType.Text
                                Icon="more"
                                Size=@ButtonSize.Large
                                Class="more-button me-2" />
                    </ChildContent>
                </Dropdown>

                <Button Type=@ButtonType.Text
                        Icon="close"
                        Size=@ButtonSize.Large
                        @onclick=@HandleClose
                        Class="close-button" />
            </div>

            <Flex Justify=@FlexJustify.SpaceBetween Align=@FlexAlign.Center Gap=@FlexGap.Middle
                  Style="margin-top: 1rem; padding: 0 24px;">
                <Flex Gap=@FlexGap.Small Align=@FlexAlign.Center>
                    <DatePicker TValue="DateTimeOffset?"
                                ShowTime="@true"
                                Format=@("yyyy-MM-dd HH:mm:ss")
                                Value=@GetDeadline()
                                Disabled="true"
                                Style="width: 180px; cursor: pointer;" />

                    <Tag Color=@GetPriorityColor()
                         Style="font-size: 16px; padding: 4px 8px; margin: 0; cursor: pointer;">
                        @GetPriorityText()
                    </Tag>
                </Flex>

                <Flex Justify=@FlexJustify.FlexEnd Align=@FlexAlign.Center Style="flex: 1 1 auto;">
                    @if (AssignedUser != null && !IsAssigneeLoading)
                    {
                        <Card BodyStyle="padding: 8px 12px; margin-right: 8px;">
                            <Flex Align=@FlexAlign.Center Gap=@FlexGap.Small>
                                <Avatar Src=@($"https://api.dicebear.com/7.x/identicon/svg?seed={AssignedUser.Username}")
                                        Size=@AvatarSize.Small />
                                <div>
                                    <Text Strong Style="font-size: 16px; display: block; line-height: 1.2;">
                                        @AssignedUser.Username
                                        @if (IsCurrentUserAssigned)
                                        {
                                            <Tag Color=@TagColor.Blue Style="margin-left: 8px; font-size: 10px;">You</Tag>
                                        }
                                    </Text>
                                </div>
                                <Button Type=@ButtonType.Text
                                        Icon="close"
                                        Size=@ButtonSize.Small
                                        OnClick=@HandleRemoveAssignment
                                        Loading=@IsRemovingAssignment
                                        Style="margin-left: 8px;" />
                            </Flex>
                        </Card>
                    }
                    else if (IsAssigneeLoading)
                    {
                        <div style="margin-right: 8px;">
                            <Spin Size=@SpinSize.Small />
                        </div>
                    }
                    else
                    {
                        <Dropdown Trigger="@(new Trigger[] { Trigger.Click })"
                                  @bind-Visible=@IsAssignModalVisible
                                  OnVisibleChange=@HandleAssignModalVisibleChange>
                            <Overlay>
                                <Menu Style="max-height: 300px; overflow-y: auto;">
                                    @if (IsMembersLoading)
                                    {
                                        <MenuItem Disabled="true">
                                            <Flex Align=@FlexAlign.Center Gap=@FlexGap.Small>
                                                <Spin Size=@SpinSize.Small />
                                                <span>Loading members...</span>
                                            </Flex>
                                        </MenuItem>
                                    }
                                    else if (BoardMembers?.Any() == true)
                                    {
                                        @foreach (var member in BoardMembers)
                                        {
                                            <MenuItem Key=@member.UserId.ToString()
                                                      OnClick=@(() => HandleAssignMember(member.UserId))>
                                                <Flex Align=@FlexAlign.Center Gap=@FlexGap.Small>
                                                    <Avatar Src=@($"https://api.dicebear.com/7.x/identicon/svg?seed={member.Username}")
                                                            Size=@AvatarSize.Small />
                                                    <div>
                                                        <div style="font-weight: 500;">@member.Username</div>
                                                        <Text Type=@TextElementType.Secondary Style="font-size: 12px;">
                                                            @member.Email
                                                        </Text>
                                                    </div>
                                                </Flex>
                                            </MenuItem>
                                        }
                                    }
                                    else
                                    {
                                        <MenuItem Disabled="true">
                                            <Text Type=@TextElementType.Secondary>No members found</Text>
                                        </MenuItem>
                                    }
                                </Menu>
                            </Overlay>
                            <ChildContent>
                                <Button Type=@ButtonType.Dashed
                                        Icon="user-add"
                                        Loading=@IsAssigningUser
                                        Style="margin-right: 8px;">
                                    Assign user
                                </Button>
                            </ChildContent>
                        </Dropdown>
                    }
                </Flex>
            </Flex>

            <div class="modal-content">
                <div class="modal-right-section">
                    <div class="comments-section">
                        <div class="section-label">
                            <Icon Type="message" />
                            <span>Comments</span>
                        </div>

                        <CommentInput OnCommentSubmit=@OnCommentSubmit
                                      IsSubmitting=@IsCommentSubmitting />

                        <CommentList Comments=@Comments
                                     IsLoading=@IsCommentsLoading
                                     OnCommentEdit=@OnCommentEdit
                                     OnCommentDelete=@OnCommentDelete />
                    </div>
                </div>
            </div>
        </Card>
    </div>
</div>

<CardStateEditModal @ref=@StateEditModal
                    Card=@Card
                    CardState=@State
                    OnSave=@OnStateEdit
                    OnCancel="@HandleStateEditCancel" />

<MoveCard @ref=@moveCardModal
          OnSave=@HandleMoveSave
          OnCancel=@(()=> moveCardModal.Close()) />